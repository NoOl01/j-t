basePath: /api/v1
definitions:
  dto.AppealBody:
    properties:
      email:
        type: string
      message:
        type: string
      name:
        type: string
      reason:
        type: integer
      theme:
        type: string
    type: object
  dto.EditEmailOrLogin:
    properties:
      new_value:
        type: string
    type: object
  dto.LoginBody:
    properties:
      login_or_email:
        type: string
      password:
        type: string
    type: object
  dto.NewPassword:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dto.RegisterBody:
    properties:
      email:
        type: string
      login:
        type: string
      password:
        type: string
    type: object
  dto.ResetPasswordRequest:
    properties:
      email:
        type: string
    type: object
  dto.UpdateCart:
    properties:
      count:
        type: integer
      product_id:
        type: integer
    type: object
  dto.VerifyOtp:
    properties:
      email:
        type: string
      otp_code:
        type: integer
    type: object
info:
  contact: {}
  title: Johny Tuna
  version: "1.0"
paths:
  /appeal:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные обращения
        in: body
        name: appeal_body
        required: true
        schema:
          $ref: '#/definitions/dto.AppealBody'
      produces:
      - application/json
      responses: {}
      summary: Обращение
      tags:
      - appeal
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для входа
        in: body
        name: login_body
        required: true
        schema:
          $ref: '#/definitions/dto.LoginBody'
      produces:
      - application/json
      responses: {}
      summary: Вход в аккаунт
      tags:
      - auth
  /auth/password/reset:
    post:
      consumes:
      - application/json
      parameters:
      - description: Новый пароль
        in: body
        name: new_password
        required: true
        schema:
          $ref: '#/definitions/dto.NewPassword'
      produces:
      - application/json
      responses: {}
      summary: Смена пароля
      tags:
      - auth
  /auth/password/reset/req:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для запроса на смену пароля
        in: body
        name: reset_password_request
        required: true
        schema:
          $ref: '#/definitions/dto.ResetPasswordRequest'
      produces:
      - application/json
      responses: {}
      summary: Запрос на смену пароля (получение OTP кода)
      tags:
      - auth
  /auth/password/reset/verify:
    post:
      consumes:
      - application/json
      parameters:
      - description: OTP код
        in: body
        name: otp_code
        required: true
        schema:
          $ref: '#/definitions/dto.VerifyOtp'
      produces:
      - application/json
      responses: {}
      summary: Подтверждение OTP кода
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Данные для регистрации
        in: body
        name: register_body
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterBody'
      produces:
      - application/json
      responses: {}
      summary: Регистрация (запрос на верификацию почты)
      tags:
      - auth
  /auth/verify:
    get:
      consumes:
      - application/json
      parameters:
      - description: Данные для регистрации + код
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Регистрация (верификация почты по OTP коду)
      tags:
      - auth
  /auth/verify/user:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Верефикация юзера по токену
      tags:
      - auth
  /cart/info:
    get:
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Получение информации о корзине
      tags:
      - cart
  /cart/update:
    post:
      consumes:
      - application/json
      description: Использовать этот запрос в случае обнавления товара в корзине,
        для добавления нового товара или удаления товара из корзины (count = 0)
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: обновление корзины
        in: body
        name: update_cart
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCart'
      produces:
      - application/json
      responses: {}
      summary: Получение информации о корзине
      tags:
      - cart
  /categories/get:
    get:
      produces:
      - application/json
      responses: {}
      summary: Получение категорий
      tags:
      - categories
  /order/place:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Получение информации о корзине
      tags:
      - order
  /products/all:
    get:
      produces:
      - application/json
      responses: {}
      summary: Получение всех продуктов
      tags:
      - products
  /products/getByCategory:
    get:
      parameters:
      - description: id категории
        in: query
        name: category_id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Получение продуктов по категории
      tags:
      - products
  /profile/info:
    get:
      consumes:
      - application/json
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Получение информации о профиле
      tags:
      - profile
  /profile/update/email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Новое значение
        in: body
        name: login_body
        required: true
        schema:
          $ref: '#/definitions/dto.EditEmailOrLogin'
      produces:
      - application/json
      responses: {}
      summary: Обновление почты
      tags:
      - profile
  /profile/update/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      - description: Новое значение
        in: body
        name: login_body
        required: true
        schema:
          $ref: '#/definitions/dto.EditEmailOrLogin'
      produces:
      - application/json
      responses: {}
      summary: Обновление логина
      tags:
      - profile
  /search/products:
    get:
      parameters:
      - description: Имя продукта (поиск)
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Получение продуктов из поиска
      tags:
      - search
swagger: "2.0"
